#1 "30 problem:05:number of primitive actions"="268";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="28";"02 properties:04:tail recursive"="true";"30 progression:04:numSearchNodes"="116";"30 progression:06:numPrimTasks"="18";"00 global:80:peak memory"="89275304";"30 progression:93:foundFirstPlanAfter"="12";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="241";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="296";"30 problem:08:number of primitive non-shop actions"="268";"30 problem:02:number of predicates"="108";"30 progression:01:status"="solved";"30 progression:03:heuristic"="hhRelataxedComposition-with-hFF-EQ";"30 problem:10:average method size"="2";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="4";"30 progression:08:numDecompositions"="10";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"30 progression:02:aStar"="1";"30 progression:92:foundShortestPlanAfter"="12";"00 global:02:randomseed"="42";"30 progression:07:numShopTasks"="0";"30 progression:91:findShortestPlan"="0";"30 progression:94:foundPlans"="1";"01 parsing:01:file parser"="205";"01 parsing:08:flatten formula"="48";"02 preprocessing:07:compile methods with identical tasks"="0";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="103";"01 parsing:03:closed world assumption"="56";"02 preprocessing:11:lifted reachabiltiy analysis"="36";"01 parsing:02:sort expansion"="92";"01 parsing:00:total"="428";"30 progression:01:searchTime"="13";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="19";"00 total:00:total"="1601";"02 preprocessing:12:grounded planning graph analysis"="583";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="165";"02 preprocessing:04:split parameter"="16";"01 parsing:05:shop methods"="2";"01 parsing:06:eliminate identical variables"="23";"02 preprocessing:05:expand choiceless abstract tasks"="20";"02 preprocessing:00:total"="1057";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="102"
SOLUTION SEQUENCE
0: fill-item(box2,agent,depot,medicine1)
1: load-carrier(agent,box2,depot,medicine1,elicopter,capacity3,capacity4)
2: move-with-box(agent,depot,padova,box2,medicine1,elicopter,depot)
3: unloadrobot(agent,box2,padova,elicopter,capacity3,capacity4)
4: empty-box-medicine(agent,box2,padova,medicine1,bob)
5: move(agent,padova,depot,elicopter)
6: fill-item(box1,agent,depot,food1)
7: load-carrier(agent,box1,depot,food1,elicopter,capacity3,capacity4)
8: move-with-box(agent,depot,verona,box1,food1,elicopter,depot)
9: unloadrobot(agent,box1,verona,elicopter,capacity3,capacity4)
10: empty-box-food(agent,box1,verona,food1,charles)
11: move(agent,verona,depot,elicopter)
12: fill-item(box3,agent,depot,tool1)
13: load-carrier(agent,box3,depot,tool1,elicopter,capacity3,capacity4)
14: move-with-box(agent,depot,verona,box3,tool1,elicopter,depot)
15: unloadrobot(agent,box3,verona,elicopter,capacity3,capacity4)
16: empty-box-tool(agent,box3,verona,tool1,alice)
17: move(agent,verona,depot,elicopter)
